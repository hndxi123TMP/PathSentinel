{
  "S1_testSimpleConcatenation": {
    "testId": "S1",
    "testMethod": "testSimpleConcatenation",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED", 
    "expectedPath": "/data/app/concat_result.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_SIMPLE_CONCAT\")", "(Return<String.equals()> == 1)"],
    "expectedVariableCount": 2,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Simple string concatenation",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionTests.processStringConstructionTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": [],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.9
  },

  "S2_testMultipleConcatenation": {
    "testId": "S2",
    "testMethod": "testMultipleConcatenation",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/app/multiple/concat/path.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_MULTIPLE_CONCAT\")", "(Return<String.equals()> == 1)"],
    "expectedVariableCount": 2,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Multiple string concatenation",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionTests.processStringConstructionTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": [],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.85
  },

  "S3_testStringBuilderSimple": {
    "testId": "S3",
    "testMethod": "testStringBuilderSimple",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/builder/simple_builder.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_BUILDER_SIMPLE\")", "(Return<String.equals()> == 1)"],
    "expectedVariableCount": 3,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "StringBuilder.append() chain",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionTests.processStringConstructionTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["StringBuilder obfuscation"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.8
  },

  "S4_testStringBuilderComplex": {
    "testId": "S4",
    "testMethod": "testStringBuilderComplex",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/complex/builder/[id]/result.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_BUILDER_COMPLEX\")", "(Return<String.equals()> == 1)", "(builder_id != null)"],
    "expectedVariableCount": 4,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Complex StringBuilder pattern",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionTests.processStringConstructionTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Complex StringBuilder", "Dynamic ID insertion"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.75
  },

  "S5_testStringBuilderWithLoop": {
    "testId": "S5",
    "testMethod": "testStringBuilderWithLoop",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/loop/builder/iteration_[n].log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_BUILDER_LOOP\")", "(Return<String.equals()> == 1)", "(loop_count > 0)", "(loop_count <= 5)"],
    "expectedVariableCount": 5,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "StringBuilder with loop",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionTests.processStringConstructionTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Loop-based StringBuilder", "Dynamic iteration"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.7
  },

  "S6_testStringBuilderConditional": {
    "testId": "S6",
    "testMethod": "testStringBuilderConditional",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/conditional/[mode]/builder.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_BUILDER_CONDITIONAL\")", "(Return<String.equals()> == 1)", "(mode != null)", "(mode.equals(\"debug\") || mode.equals(\"release\"))"],
    "expectedVariableCount": 4,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "StringBuilder with conditions",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionTests.processStringConstructionTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Conditional StringBuilder"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.75
  },

  "S7_testStringBufferConstruction": {
    "testId": "S7",
    "testMethod": "testStringBufferConstruction",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/buffer/string_buffer_result.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_BUFFER\")", "(Return<String.equals()> == 1)"],
    "expectedVariableCount": 3,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "StringBuffer.append() chain",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionTests.processStringConstructionTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["StringBuffer obfuscation"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.8
  },

  "S8_testStringFormatConstruction": {
    "testId": "S8",
    "testMethod": "testStringFormatConstruction",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/format/formatted_[timestamp].log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_FORMAT\")", "(Return<String.equals()> == 1)", "(timestamp != null)"],
    "expectedVariableCount": 3,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "String.format() construction",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionTests.processStringConstructionTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["String formatting"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.85
  },

  "S9_testMethodBasedConstruction": {
    "testId": "S9",
    "testMethod": "testMethodBasedConstruction",
    "vulnerabilityType": "construction", 
    "pathType": "HARD_CODED",
    "expectedPath": "/data/method/constructed_path.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_METHOD_CONSTRUCTION\")", "(Return<String.equals()> == 1)"],
    "expectedVariableCount": 2,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Method-based path construction",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionTests.processStringConstructionTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Method-based construction"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.8
  },

  "S10_testReflectionBasedConstruction": {
    "testId": "S10",
    "testMethod": "testReflectionBasedConstruction",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/reflection/reflected_path.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_REFLECTION\")", "(Return<String.equals()> == 1)", "(method_name != null)"],
    "expectedVariableCount": 4,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Reflection-based construction",
    "shouldResolveCompletely": false,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionTests.processStringConstructionTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Reflection", "Dynamic method invocation"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.6
  },

  "S11_testNestedStringBuilders": {
    "testId": "S11",
    "testMethod": "testNestedStringBuilders",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/nested/outer/inner/nested_result.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_NESTED_BUILDERS\")", "(Return<String.equals()> == 1)", "(nesting_level > 0)"],
    "expectedVariableCount": 5,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Nested StringBuilder construction",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionTests.processStringConstructionTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Nested StringBuilder", "Complex nesting"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.65
  },

  "S12_testStringBuilderWithExternalInput": {
    "testId": "S12",
    "testMethod": "testStringBuilderWithExternalInput",
    "vulnerabilityType": "construction",
    "pathType": "PARTIALLY_CONTROLLED",
    "expectedPath": "/data/builder/<user_input>/external.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_BUILDER_EXTERNAL\")", "(Return<String.equals()> == 1)", "(external_input != null)"],
    "expectedVariableCount": 4,
    "expectedExternalInputs": ["Intent.getStringExtra(\"external_input\")"],
    "expectedConstructionPattern": "StringBuilder with external input",
    "shouldResolveCompletely": false,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionTests.processStringConstructionTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["StringBuilder obfuscation", "External input mixing"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.7
  },

  "S13_testComplexPathConstruction": {
    "testId": "S13",
    "testMethod": "testComplexPathConstruction",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/complex/[year]/[month]/[day]/[hour]/complex_path.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_COMPLEX_CONSTRUCTION\")", "(Return<String.equals()> == 1)", "(date_components != null)"],
    "expectedVariableCount": 6,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Complex multi-component path construction",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionTests.processStringConstructionTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Multi-component construction", "Date-based paths"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.65
  },

  "S14_testSystemPropertyConstruction": {
    "testId": "S14",
    "testMethod": "testSystemPropertyConstruction",
    "vulnerabilityType": "construction",
    "pathType": "PARTIALLY_CONTROLLED",
    "expectedPath": "$SYSTEM_PROPERTY/property_based.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_SYSTEM_PROPERTY\")", "(Return<String.equals()> == 1)", "(property_name != null)"],
    "expectedVariableCount": 4,
    "expectedExternalInputs": ["System.getProperty()"],
    "expectedConstructionPattern": "System property-based construction",
    "shouldResolveCompletely": false,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionTests.processStringConstructionTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["System property resolution"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.6
  },

  "S15_testEnvironmentVariableConstruction": {
    "testId": "S15",
    "testMethod": "testEnvironmentVariableConstruction",
    "vulnerabilityType": "construction",
    "pathType": "PARTIALLY_CONTROLLED",
    "expectedPath": "$ENV_VAR/environment_based.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_ENV_CONSTRUCTION\")", "(Return<String.equals()> == 1)", "(env_var_name != null)"],
    "expectedVariableCount": 4,
    "expectedExternalInputs": ["System.getenv()"],
    "expectedConstructionPattern": "Environment variable-based construction",
    "shouldResolveCompletely": false,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionTests.processStringConstructionTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Environment variable resolution"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.6
  },

  "S16_testArrayBasedConstruction": {
    "testId": "S16",
    "testMethod": "testArrayBasedConstruction",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/array/[0]/[1]/[2]/array_path.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_ARRAY_CONSTRUCTION\")", "(Return<String.equals()> == 1)", "(path_parts != null)", "(path_parts.length >= 3)"],
    "expectedVariableCount": 5,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Array-based path construction",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionTests.processStringConstructionTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Array-based construction"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.7
  },

  "S17_testListBasedConstruction": {
    "testId": "S17",
    "testMethod": "testListBasedConstruction",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/list/joined/path/components.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_LIST_CONSTRUCTION\")", "(Return<String.equals()> == 1)", "(path_list != null)", "(path_list.size() > 0)"],
    "expectedVariableCount": 4,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "List-based path construction",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionTests.processStringConstructionTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["List-based construction", "Join operations"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.75
  },

  "S18_testMapBasedConstruction": {
    "testId": "S18",
    "testMethod": "testMapBasedConstruction",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/map/[key1]/[key2]/map_result.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_MAP_CONSTRUCTION\")", "(Return<String.equals()> == 1)", "(path_map != null)", "(path_map.containsKey(\"key1\"))"],
    "expectedVariableCount": 5,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Map-based path construction",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionTests.processStringConstructionTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Map-based construction"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.7
  },

  "S19_testPatternBasedConstruction": {
    "testId": "S19",
    "testMethod": "testPatternBasedConstruction", 
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/pattern/[replaced_pattern]/result.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_PATTERN_CONSTRUCTION\")", "(Return<String.equals()> == 1)", "(pattern != null)", "(replacement != null)"],
    "expectedVariableCount": 4,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Pattern-based path construction",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionTests.processStringConstructionTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Pattern replacement"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.75
  },

  "S20_testStreamBasedConstruction": {
    "testId": "S20",
    "testMethod": "testStreamBasedConstruction",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/stream/processed/stream_result.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_STREAM_CONSTRUCTION\")", "(Return<String.equals()> == 1)", "(stream_components != null)"],
    "expectedVariableCount": 4,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Stream-based path construction",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionTests.processStringConstructionTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Stream operations"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.7
  },

  "S21_testBase64DecodingConstruction": {
    "testId": "S21",
    "testMethod": "testBase64DecodingConstruction",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/decoded/base64_decoded_path.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_BASE64_CONSTRUCTION\")", "(Return<String.equals()> == 1)", "(encoded_path != null)"],
    "expectedVariableCount": 3,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Base64 decoding construction",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionEdgeCases.processEdgeCaseTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Base64 encoding/decoding"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.65
  },

  "S22_testEncryptionDecryptionConstruction": {
    "testId": "S22",
    "testMethod": "testEncryptionDecryptionConstruction",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/encrypted/decrypted_path.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_ENCRYPTION_CONSTRUCTION\")", "(Return<String.equals()> == 1)", "(encrypted_path != null)", "(decryption_key != null)"],
    "expectedVariableCount": 5,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Encryption/decryption construction", 
    "shouldResolveCompletely": false,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionEdgeCases.processEdgeCaseTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Encryption", "Decryption", "Cryptographic obfuscation"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.4
  },

  "S23_testUnicodeHandlingConstruction": {
    "testId": "S23",
    "testMethod": "testUnicodeHandlingConstruction",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/unicode/unicode_path_测试.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_UNICODE_CONSTRUCTION\")", "(Return<String.equals()> == 1)", "(unicode_component != null)"],
    "expectedVariableCount": 3,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Unicode string construction",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionEdgeCases.processEdgeCaseTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Unicode encoding"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.8
  },

  "S24_testNullHandlingConstruction": {
    "testId": "S24",
    "testMethod": "testNullHandlingConstruction",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/null_handling/default_path.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_NULL_HANDLING\")", "(Return<String.equals()> == 1)", "(null_component == null)"],
    "expectedVariableCount": 3,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Null handling in construction",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionEdgeCases.processEdgeCaseTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Null handling"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.85
  },

  "S25_testEmptyStringHandlingConstruction": {
    "testId": "S25", 
    "testMethod": "testEmptyStringHandlingConstruction",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/empty_handling/fallback_path.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_EMPTY_HANDLING\")", "(Return<String.equals()> == 1)", "(empty_component.length() == 0)"],
    "expectedVariableCount": 3,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Empty string handling in construction",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionEdgeCases.processEdgeCaseTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Empty string handling"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.85
  },

  "S26_testWhitespaceHandlingConstruction": {
    "testId": "S26",
    "testMethod": "testWhitespaceHandlingConstruction",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/whitespace/trimmed_path.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_WHITESPACE_HANDLING\")", "(Return<String.equals()> == 1)", "(whitespace_component != null)"],
    "expectedVariableCount": 3,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Whitespace handling in construction",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionEdgeCases.processEdgeCaseTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Whitespace normalization"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.8
  },

  "S27_testCaseInsensitiveConstruction": {
    "testId": "S27",
    "testMethod": "testCaseInsensitiveConstruction", 
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/case_insensitive/LOWERCASE_path.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_CASE_INSENSITIVE\")", "(Return<String.equals()> == 1)", "(case_component != null)"],
    "expectedVariableCount": 3,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Case-insensitive construction",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionEdgeCases.processEdgeCaseTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Case manipulation"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.8
  },

  "S28_testSpecialCharacterConstruction": {
    "testId": "S28",
    "testMethod": "testSpecialCharacterConstruction",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/special_chars/path_with_$pecial_chars.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_SPECIAL_CHARS\")", "(Return<String.equals()> == 1)", "(special_chars != null)"],
    "expectedVariableCount": 3,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Special character construction",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionEdgeCases.processEdgeCaseTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Special character handling"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.75
  },

  "S29_testNestedMethodCallConstruction": {
    "testId": "S29",
    "testMethod": "testNestedMethodCallConstruction",
    "vulnerabilityType": "construction", 
    "pathType": "HARD_CODED",
    "expectedPath": "/data/nested_methods/deeply/nested/result.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_NESTED_METHODS\")", "(Return<String.equals()> == 1)", "(nesting_level > 0)"],
    "expectedVariableCount": 4,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Nested method call construction",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionEdgeCases.processEdgeCaseTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Nested method calls"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.7
  },

  "S30_testExceptionHandlingConstruction": {
    "testId": "S30",
    "testMethod": "testExceptionHandlingConstruction",
    "vulnerabilityType": "construction",
    "pathType": "HARD_CODED",
    "expectedPath": "/data/exception/fallback_path.log",
    "expectedConstraints": ["(intent_action == \"TEST_STRING_EXCEPTION_HANDLING\")", "(Return<String.equals()> == 1)", "(exception_occurred == true)"],
    "expectedVariableCount": 3,
    "expectedExternalInputs": [],
    "expectedConstructionPattern": "Exception handling in construction",
    "shouldResolveCompletely": true,
    "expectedEntryPoint": "com.test.pathsent_tester.StringConstructionEdgeCases.processEdgeCaseTest",
    "expectedTargetMethod": "<java.io.FileOutputStream: void write(byte[])>",
    "expectedObfuscationTechniques": ["Exception-based control flow"],
    "isVulnerable": true,
    "expectedConfidenceScore": 0.75
  }
}